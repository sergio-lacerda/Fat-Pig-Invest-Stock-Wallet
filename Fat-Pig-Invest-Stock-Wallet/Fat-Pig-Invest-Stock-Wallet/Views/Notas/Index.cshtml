@model IEnumerable<Fat_Pig_Invest_Stock_Wallet.Models.Nota>

@{
    ViewData["Title"] = "Notas de Negociação";

    var totalOperacoes = 0.00M;
    var despesas = 0.00M;
    var liquido = 0.00M;
    var dc = "C";
}

<h1>Notas de Negociação</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Adicionar Nota</a>
</p>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DataPregao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumeroNota)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Corretora)
            </th>   
            <th style="text-align:right;">
                Total das operações
            </th>  
            <th style="text-align:right;">
                Despesas
            </th> 
            <th style="text-align:right;">
                Líquido da nota
            </th> 
            <th>
                D/C
            </th> 
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DataPregao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumeroNota)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Corretora.Nome)
            </td>    
            <td style="text-align:right;">
               @{
                    totalOperacoes = item.Ordens.Sum(o => o.Quantidade * o.PrecoUnitario);

                    var creditos = item.Ordens
                        .Where(o => o.TipoOrdem == 'V')
                        .Sum(o => o.Quantidade * o.PrecoUnitario);

                    var debitos = item.Ordens
                        .Where(o => o.TipoOrdem == 'C')
                        .Sum(o => o.Quantidade * o.PrecoUnitario);

                    var LiquidoOperacoes = creditos - debitos;                    

                    despesas = item.TaxaLiquidacao + item.Corretagem + item.Emolumentos;
                    liquido = LiquidoOperacoes - despesas;
                    dc = (liquido >=0) ? "C" : "D";
                    
                }   
                @String.Format("{0:c}", totalOperacoes)
            </td>  
            <td style="text-align:right;">
                @String.Format("{0:c}", despesas)
            </td> 
            <td style="text-align:right;">
                @String.Format("{0:c}", Math.Abs(liquido))
            </td> 
            <td>
                @dc
            </td> 
            <td class="td-botoes-table">
                <a class="badge" style="background-color:chocolate" asp-controller="Ordens" asp-action="CreateOrder" asp-route-id="@item.Id">Ordens</a>
                <a class="badge bg-primary" asp-action="Edit" asp-route-id="@item.Id">Editar</a>
                <a class="badge bg-success" asp-action="Details" asp-route-id="@item.Id">Detalhes</a>
                <a class="badge bg-danger" asp-action="Delete" asp-route-id="@item.Id">Apagar</a>
            </td>
        </tr>
}
    </tbody>
</table>
